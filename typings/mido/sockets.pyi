"""
This type stub file was generated by pyright.
"""

from .ports import BaseIOPort, MultiPort

"""
MIDI over TCP/IP.
"""
class PortServer(MultiPort):
    def __init__(self, host, portno, backlog=...) -> None:
        ...
    
    def accept(self, block=...): # -> SocketPort | None:
        """
        Accept a connection from a client.

        Will block until there is a new connection, and then return a
        SocketPort object.

        If block=False, None will be returned if there is no
        new connection waiting.
        """
        ...
    


class SocketPort(BaseIOPort):
    def __init__(self, host, portno, conn=...) -> None:
        ...
    


def connect(host, portno): # -> SocketPort:
    """Connect to a socket port server.

    The return value is a SocketPort object connected to another
    SocketPort object at the server end. Messages can be sent either way.
    """
    ...

def parse_address(address): # -> tuple[Any, int]:
    """Parse and address on the format host:port.

    Returns a tuple (host, port). Raises ValueError if format is
    invalid or port is not an integer or out of range.
    """
    ...

def format_address(host, portno): # -> str:
    ...

